{"version":3,"sources":["components/nav/index.js","components/app/index.js","components/Loading.js","components/ErrorMessage.js","api/index.js","pages/login/index.js","components/modal/index.js","components/createUserForm/index.js","utils/index.js","pages/admin/index.js","components/postArticleForm/index.js","components/articles/article.js","components/sessionExpired/index.js","components/articles/index.js","components/gifs/index.js","pages/user/index.js","routes.js","serviceWorker.js","index.js"],"names":["Nav","isLoggedIn","bgText","logOut","className","to","process","onClick","App","isAuthed","Loading","color","size","style","textAlign","icon","faSpinner","spin","defaultProps","ErrorMessage","message","token","JSON","parse","localStorage","getItem","API","axios","create","baseURL","headers","defaults","common","Login","setLoginStatus","useState","email","password","inputVal","setInputVal","error","setError","isLoading","setIsLoading","handleChange","event","target","name","value","trim","handleSubmit","a","preventDefault","data","post","response","setUserData","status","msg","setItem","stringify","onSubmit","htmlFor","type","id","required","onChange","minLength","Modal","user","setUser","title","createUserForm","formValue","setFormValue","addUser","removeError","closeForm","firstName","lastName","autoComplete","jobRole","department","address","isAdmin","gender","firstLetterToUppercase","word","toUpperCase","substring","MONTHS","defaultFormValue","Admin","showForm","setShowForm","loading","setLoading","newUser","setNewUser","handleAddUser","config","toUpper","lastname","initialState","article","PostArticleForm","addPost","handleOnChange","autoCapitalize","placeholder","Article","createdon","authorid","console","log","str","date","Date","month","getMonth","getDate","formatDate","SessionExpired","Articles","userSession","setUserSession","setData","count","setCount","useEffect","didCancel","get","result","fetchData","formData","c","sort","b","sortArticle","map","key","Gifs","User","toggleView","setToggleView","session","setSession","userId","Routes","React","login","setLogin","removeItem","userData","basename","exact","path","render","props","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2c3cfd4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst Nav = ({ isLoggedIn, bgText, logOut }) => {\r\n  return (\r\n    <nav className={`nav ${bgText}`}>\r\n      <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n        <span className=\"nav-link\">TeamWork</span>\r\n      </Link>\r\n      {isLoggedIn ? (\r\n        <button onClick={logOut}>Logout</button>\r\n      ) : (\r\n        <Link to={process.env.PUBLIC_URL + \"/login\"}>\r\n          <button>Login</button>\r\n        </Link>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  bgText: PropTypes.string,\r\n  logOut: PropTypes.func.isRequired\r\n};\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport Nav from \"../nav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nfunction App({ isAuthed, logOut }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav isLoggedIn={isAuthed} logOut={logOut} />\r\n      <header className=\"App-header\">\r\n        <h1>Let's Connect as We Work Together</h1>\r\n        <p>- Post Gifs, Articles, Comments and more...</p>\r\n        <Link to={process.env.PUBLIC_URL + \"/user\"}>\r\n          <button>Get Started</button>\r\n        </Link>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  isAuthed: PropTypes.bool.isRequired,\r\n  logOut: PropTypes.func.isRequired\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst Loading = ({ color, size }) => (\r\n  <div style={{ color, textAlign: \"center\" }}>\r\n    <FontAwesomeIcon icon={faSpinner} spin size={size} />\r\n  </div>\r\n);\r\n\r\nLoading.defaultProps = { size: \"2x\", color: \"#5F7192\" };\r\n\r\nLoading.propTypes = {\r\n  size: PropTypes.string,\r\n  color: PropTypes.string\r\n};\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst ErrorMessage = ({ message, color = \"#000\" }) => (\r\n  <p className=\"error-text\" style={{color}} >Error: {message}</p>\r\n);\r\n\r\nErrorMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  color: PropTypes.string\r\n};\r\nexport default ErrorMessage;\r\n","import axios from \"axios\";\r\nconst { token } = JSON.parse(localStorage.getItem(\"data\")) || { token: \"\" };\r\nconst baseURL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:8000/api/v1\"\r\n    : \"https://sink-teamwork-api.herokuapp.com/api/v1\";\r\n\r\nconst API = axios.create({\r\n  baseURL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\nAPI.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n\r\nexport default API;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport API from \"../../api\";\r\n\r\nconst Login = ({ setLoginStatus, isAuthed }) => {\r\n  const [inputVal, setInputVal] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = event => {\r\n    //hide error message\r\n    setError(null);\r\n    const { name, value } = event.target;\r\n    setInputVal({ ...inputVal, [name]: value.trim() });\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    setError(null);\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const data = inputVal;\r\n    try {\r\n      const response = await API.post(\"auth/signin\", data);\r\n      setIsLoading(false);\r\n      setUserData(response.data.data);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      const { data } = error.response;\r\n      setError({\r\n        status: \"error\",\r\n        msg: data.error\r\n      });\r\n    }\r\n  };\r\n\r\n  const setUserData = data => {\r\n    localStorage.setItem(\"data\", JSON.stringify(data));\r\n    setLoginStatus(true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {isAuthed && <Redirect to=\"/user\" />}\r\n      <div className=\"login-container\">\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <h2>TeamWork</h2>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={inputVal.email}\r\n              className=\"form-input\"\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              minLength=\"5\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={inputVal.password}\r\n              className=\"form-input\"\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {error && <ErrorMessage message={error.msg} />}\r\n          {isLoading && <Loading size=\"1x\" color=\"#fff\" />}\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  setLoginStatus: PropTypes.func.isRequired,\r\n  isAuthed: PropTypes.bool\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport \"./index.css\";\r\nconst Modal = ({ user, setUser }) => {\r\n  const onClose = () => {\r\n    //close modal\r\n    setUser(null);\r\n  };\r\n  return (\r\n    <div className=\"modal-content\">\r\n      <span onClick={onClose} title=\"OK\" className=\"modal-closer\">\r\n        &times;\r\n      </span>\r\n      <h2 className=\"modal-header\">User successfully created</h2>\r\n      <div className=\"modal-details\">\r\n        <p>Please save new user login details</p>\r\n        <span>\r\n          Email: <i>{user.email}</i>\r\n        </span>\r\n        <span>\r\n          Password: <b>{user.password}</b>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  user: PropTypes.object,\r\n  setUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport Loading from \"../Loading\";\r\nimport Modal from \"../modal\";\r\n\r\nconst createUserForm = ({\r\n  formValue,\r\n  setFormValue,\r\n  addUser,\r\n  isLoading,\r\n  error,\r\n  removeError,\r\n  closeForm,\r\n  user,\r\n  setUser\r\n}) => {\r\n  const handleChange = event => {\r\n    removeError();\r\n    const { name, value } = event.target;\r\n    if (name === \"address\") {\r\n      return setFormValue({ ...formValue, [name]: value });\r\n    }\r\n    return setFormValue({ ...formValue, [name]: value.trim() });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    addUser(formValue);\r\n  };\r\n  return (\r\n    <div className=\"create-user-container\">\r\n      <p className=\"close-form\">\r\n        <span title=\"Close Form\" onClick={() => closeForm()}>\r\n          &times;\r\n        </span>\r\n      </p>\r\n      <form className=\"create-user-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstname\">Firstname</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstname\"\r\n            value={formValue.firstName}\r\n            name=\"firstName\"\r\n            className=\"form-input\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastname\">Lastname</label>\r\n          <input\r\n            type=\"lastname\"\r\n            id=\"lastname\"\r\n            value={formValue.lastName}\r\n            name=\"lastName\"\r\n            className=\"form-input\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={formValue.email}\r\n            name=\"email\"\r\n            className=\"form-input\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">\r\n            Password <span className=\"password-note\"> - Please note it</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"password\"\r\n            value={formValue.password}\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            minLength=\"5\"\r\n            className=\"form-input\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"jobrole\">Job Role</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"jobrole\"\r\n            value={formValue.jobRole}\r\n            name=\"jobRole\"\r\n            className=\"form-input\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"dept\">Department</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"dept\"\r\n            value={formValue.department}\r\n            name=\"department\"\r\n            className=\"form-input\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            value={formValue.address}\r\n            name=\"address\"\r\n            className=\"form-input\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"isadmin\">Admin</label>\r\n          <select\r\n            value={formValue.isAdmin}\r\n            id=\"isadmin\"\r\n            name=\"isAdmin\"\r\n            className=\"form-input\"\r\n            onChange={handleChange}\r\n          >\r\n            <option value={false}>No</option>\r\n            <option value={true}>Yes</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"gender\">Gender</label>\r\n          <select\r\n            value={formValue.gender}\r\n            id=\"gender\"\r\n            name=\"gender\"\r\n            className=\"form-input\"\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"Female\">Female</option>\r\n            <option value=\"Male\">Male</option>\r\n          </select>\r\n        </div>\r\n        {isLoading && <Loading size=\"1x\" color=\"#fff\" />}\r\n        {error && <ErrorMessage message={error.msg} />}\r\n        <button className=\"create-user-button btn-white\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {user && <Modal user={user} setUser={setUser} />}\r\n    </div>\r\n  );\r\n};\r\n\r\ncreateUserForm.propTypes = {\r\n  formValue: PropTypes.object.isRequired,\r\n  setFormValue: PropTypes.func.isRequired,\r\n  addUser: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  error: PropTypes.object,\r\n  removeError: PropTypes.func.isRequired,\r\n  closeForm: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  setUser: PropTypes.func.isRequired\r\n};\r\nexport default createUserForm;\r\n","export const firstLetterToUppercase = word =>\r\n  word[0].toUpperCase() + word.substring(1);\r\nconst MONTHS = [\r\n  \"JAN\",\r\n  \"FEB\",\r\n  \"MAR\",\r\n  \"APR\",\r\n  \"MAY\",\r\n  \"JUN\",\r\n  \"JUL\",\r\n  \"AUG\",\r\n  \"SEP\",\r\n  \"OCT\",\r\n  \"NOV\",\r\n  \"DEC\"\r\n];\r\nexport const formatDate = str => {\r\n  const date = new Date(str);\r\n  const month = MONTHS[date.getMonth()];\r\n  const newDate = `${month} ${date.getDate()}`; // e.g \"DEC 31\"\r\n  return newDate;\r\n};\r\n\r\n\r\nexport const sortArticle = data => {\r\n  return data.sort((a, b) => {\r\n    return a.id - b.id;\r\n  });\r\n};\r\n\r\nexport const data = [\r\n  {\r\n    id: 10,\r\n    createdon: \"2019-11-18T23:00:00.000Z\",\r\n    title: \"updated title\",\r\n    article: \"This article has been updated\",\r\n    authorid: \"c308f87e-f84d-4479-80ce-e68b6b771ef3\"\r\n  },\r\n  {\r\n    id: 3,\r\n    createdon: \"2019-11-18T23:00:00.000Z\",\r\n    title: \"A cool title\",\r\n    article: \"Updated article 3, removed cool part\",\r\n    authorid: \"c308f87e-f84d-4479-80ce-e68b6b771ef3\"\r\n  },\r\n  {\r\n    id: 69,\r\n    createdon: \"2019-12-31T23:00:00.000Z\",\r\n    title: \"Another test article\",\r\n    article: \"Let's see if the component if re-render.\",\r\n    authorid: \"092e6fed-92b5-4dca-9d8a-66202521d951\"\r\n  },\r\n  {\r\n    id: 70,\r\n    createdon: \"2019-12-31T23:00:00.000Z\",\r\n    title: \"Mobile Web Specialist Track\",\r\n    article: \"Let's now see how it goes.\",\r\n    authorid: \"092e6fed-92b5-4dca-9d8a-66202521d951\"\r\n  },\r\n  {\r\n    id: 71,\r\n    createdon: \"2019-12-31T23:00:00.000Z\",\r\n    title: \"A new one again\",\r\n    article: \"I just want to be sure of what is going on.\",\r\n    authorid: \"092e6fed-92b5-4dca-9d8a-66202521d951\"\r\n  },\r\n  {\r\n    id: 67,\r\n    createdon: \"2019-12-31T23:00:00.000Z\",\r\n    title: \"Another article\",\r\n    article:\r\n      \"I wanna test if the  useEffect hook rerenders the component as expected.\",\r\n    authorid: \"092e6fed-92b5-4dca-9d8a-66202521d951\"\r\n  },\r\n  {\r\n    id: 66,\r\n    createdon: \"2019-12-31T23:00:00.000Z\",\r\n    title: \"A new article.\",\r\n    article:\r\n      \"A new article that I am excited to post.↵I am very excited about this.\",\r\n    authorid: \"092e6fed-92b5-4dca-9d8a-66202521d951\"\r\n  },\r\n  {\r\n    id: 68,\r\n    createdon: \"2019-12-31T23:00:00.000Z\",\r\n    title: \"A test article.\",\r\n    article: \"Another one to see if the component will re-render.\",\r\n    authorid: \"092e6fed-92b5-4dca-9d8a-66202521d951\"\r\n  }\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport \"./index.css\";\r\nimport Nav from \"../../components/nav\";\r\nimport CreateUserForm from \"../../components/createUserForm\";\r\nimport { firstLetterToUppercase as toUpper } from \"../../utils\";\r\nimport API from \"../../api\";\r\nconst defaultFormValue = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  gender: \"Female\",\r\n  password: \"\",\r\n  jobRole: \"\",\r\n  department: \"\",\r\n  address: \"\",\r\n  isAdmin: false\r\n};\r\n\r\nconst Admin = ({ isAuthed, logOut, data }) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [formValue, setFormValue] = useState(defaultFormValue);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [newUser, setNewUser] = useState(null);\r\n\r\n  const isAdmin = data && data.isAdmin;\r\n  const handleAddUser = async data => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await API.post(\"/auth/create-user\", data);\r\n      setLoading(false);\r\n      setFormValue(defaultFormValue);\r\n      const { email, password } = JSON.parse(response.config.data);\r\n      setNewUser({ email, password });\r\n    } catch (error) {\r\n      setLoading(false);\r\n      const { data } = error.response;\r\n      setError({\r\n        status: \"error\",\r\n        msg: data.error\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {!isAdmin ? (\r\n        <Redirect to=\"/user\" />\r\n      ) : (\r\n        <>\r\n          <Nav isLoggedIn={isAuthed} logOut={logOut} bgText=\"bg-text\" />\r\n          <main className=\"main-container\">\r\n            <h2>Welcome {toUpper(data.lastname)}</h2>\r\n            {!showForm && (\r\n              <button className=\"btn-white\" onClick={() => setShowForm(true)}>\r\n                Add User\r\n              </button>\r\n            )}\r\n          </main>\r\n          {showForm && (\r\n            <CreateUserForm\r\n              formValue={formValue}\r\n              setFormValue={setFormValue}\r\n              addUser={handleAddUser}\r\n              isLoading={loading}\r\n              error={error}\r\n              removeError={setError}\r\n              closeForm={setShowForm}\r\n              user={newUser}\r\n              setUser={setNewUser}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAdmin.propTypes = {\r\n  isAuthed: PropTypes.bool.isRequired,\r\n  logOut: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\nexport default Admin;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst initialState = { title: \"\", article: \"\" };\r\n\r\nconst PostArticleForm = ({ addPost }) => {\r\n  const [formValue, setFormValue] = useState(initialState);\r\n\r\n  const handleOnChange = event => {\r\n    const { name, value } = event.target;\r\n    return setFormValue({\r\n      ...formValue,\r\n      [name]: value\r\n    });\r\n  };\r\n  const handleOnSubmit = event => {\r\n    event.preventDefault();\r\n    addPost(formValue);\r\n    setFormValue(initialState);\r\n  };\r\n  return (\r\n    <>\r\n      <hr></hr>\r\n    <div className=\"post-article-container\">\r\n      <h3 className=\"post-article-header\">Post Your Own Article</h3>\r\n      <form className=\"post-article-form\" onSubmit={handleOnSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"article-title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            autoCapitalize=\"sentences\"\r\n            id=\"article-title\"\r\n            name=\"title\"\r\n            value={formValue.title}\r\n            onChange={handleOnChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"article-body\">Body</label>\r\n          <textarea\r\n            className=\"article-body form-input\"\r\n            id=\"article-body\"\r\n            autoCapitalize=\"sentences\"\r\n            name=\"article\"\r\n            value={formValue.article}\r\n            onChange={handleOnChange}\r\n            placeholder=\"Write here..\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\">Post</button>\r\n      </form>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPostArticleForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostArticleForm;\r\n","import React from \"react\";\r\nimport { formatDate } from \"../../utils\";\r\nimport \"./index.css\";\r\n\r\nconst Article = ({ data }) => {\r\n  const { id, createdon, title, article, authorid } = data;\r\n  const handleOnClick = () => {\r\n    console.log(\"authorId :\", authorid);\r\n    console.log(\"articleId :\", id);\r\n  };\r\n  return (\r\n    <li>\r\n      <div onClick={handleOnClick} className=\"message-box\">\r\n        <h3 className=\"message-title\"> {title}</h3>\r\n        <span className=\"message-date\">{formatDate(createdon)}</span>\r\n        <p className=\"message\">{article}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SessionExpired = ({ logOut }) => {\r\n  return (\r\n    <div className=\"session-expired-container bg-text\">\r\n      <h3>Your session has expired</h3>\r\n      <button className=\"btn-white\" onClick={() => logOut()}>Signin</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSessionExpired.propTypes = {\r\n  logOut: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SessionExpired;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostArticleForm from \"../postArticleForm\";\r\nimport Article from \"./article\";\r\nimport Loading from \"../Loading\";\r\nimport API from \"../../api\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport SessionExpired from \"../sessionExpired\";\r\nimport { sortArticle } from \"../../utils\";\r\n\r\nconst Articles = ({ logOut, userSession, setUserSession }) => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [count, setCount] = useState(0);\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await API.get(\"/feed/articles\");\r\n        if (!didCancel) {\r\n          setData(result.data.data);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        if (error.response.status === 401) {\r\n          //if session expired\r\n          return setUserSession(false);\r\n        }\r\n        setError(\"Oops! Something went wrong.\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    return () => {\r\n      //clean up\r\n      didCancel = true;\r\n    };\r\n  }, [count, setUserSession]);\r\n\r\n  const addPost = async formData => {\r\n    try {\r\n      const response = await API.post(\"/articles\", formData);\r\n      if (response.data.data) {\r\n        //trigger useEffect hook\r\n        setCount(c => c + 1);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <ul className=\"message-pane\">\r\n          {sortArticle(data).map(article => {\r\n            return <Article key={article.id} data={article} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n      {!userSession && <SessionExpired logOut={logOut} />}\r\n      {error && <ErrorMessage message={error} />}\r\n      <PostArticleForm addPost={addPost} />\r\n    </>\r\n  );\r\n};\r\n\r\nArticles.propTypes = {\r\n  logOut: PropTypes.func.isRequired,\r\n  userSession: PropTypes.bool.isRequired,\r\n  setUserSession: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Articles;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Gifs = () => {\r\n  return <div>Gifs Component not ready yet</div>;\r\n};\r\n\r\nexport default Gifs;\r\n","import React, { useState } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Nav from \"../../components/nav\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { firstLetterToUppercase as toUpper } from \"../../utils\";\r\nimport Articles from \"../../components/articles\";\r\nimport Gifs from \"../../components/gifs\";\r\n\r\nconst User = ({ isAuthed, logOut, data }) => {\r\n  const [toggleView, setToggleView] = useState(true);\r\n  const [session, setSession ] = useState(true);\r\n  // get loggedin user data from localStorage\r\n  const isAdmin = data && data.isAdmin;\r\n\r\n  const viewArticles = () => {\r\n    setToggleView(true);\r\n  };\r\n\r\n  const viewGifs = () => {\r\n    setToggleView(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* if user is not logged in, redirect to login page */}\r\n      {!data.userId ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <>\r\n          <Nav isLoggedIn={isAuthed} bgText=\"bg-text\" logOut={logOut} />\r\n          <main className=\"main-container\">\r\n            <h2>\r\n              Greetings! {toUpper(data.lastname)}{\" \"}\r\n              {isAdmin && (\r\n                <Link to=\"/admin\">\r\n                  <span className=\"role-text\">- Admin</span>{\" \"}\r\n                </Link>\r\n              )}\r\n            </h2>\r\n            <div>\r\n              {toggleView ? (\r\n                <button className=\"small-btn btn-white\" onClick={viewGifs}>\r\n                  View Gifs\r\n                </button>\r\n              ) : (\r\n                <button className=\"small-btn btn-white\" onClick={viewArticles}>\r\n                  View Articles\r\n                </button>\r\n              )}\r\n            </div>\r\n          </main>\r\n          <div className=\"post-view\">\r\n            {toggleView ? <Articles logOut={logOut} userSession={session} setUserSession={setSession} /> : <Gifs />}\r\n          </div>{\" \"}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nUser.propTypes = {\r\n  isAuthed: PropTypes.bool.isRequired,\r\n  logOut: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\nexport default User;\r\n","import React from \"react\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./components/app\";\r\nimport Login from \"./pages/login\";\r\nimport Admin from \"./pages/admin\";\r\nimport User from \"./pages/user\";\r\n// import NotFound from \"./components/NotFound\";\r\n\r\nconst Routes = () => {\r\n  const [login, setLogin] = React.useState(\r\n    localStorage.getItem(\"data\") ? true : false\r\n  );\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"data\");\r\n    setLogin(false);\r\n  };\r\n  const userData = JSON.parse(localStorage.getItem(\"data\")) || {};\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          render={props => <App {...props} isAuthed={login} logOut={logOut} />}\r\n        />\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/login\"}\r\n          render={props => (\r\n            <Login {...props} setLoginStatus={setLogin} isAuthed={login} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/admin\"}\r\n          render={props => (\r\n            <Admin\r\n              {...props}\r\n              setLoginStatus={setLogin}\r\n              isAuthed={login}\r\n              logOut={logOut}\r\n              data={userData}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/user\"}\r\n          render={props => (\r\n            <User {...props} isAuthed={login} logOut={logOut} data={userData} />\r\n          )}\r\n        />\r\n        {/* <Route component={NotFound} /> */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Routes from \"./routes\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\r\n\r\n//Hot Module Replacement\r\nif (process.env.NODE_ENV === \"development\" && module.hot) {\r\n  module.hot.accept();\r\n}\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}